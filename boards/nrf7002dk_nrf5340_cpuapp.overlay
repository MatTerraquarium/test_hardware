/*
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

 / {
	chosen {
		nordic,pm-ext-flash = &mx25r64;
	};

	aliases {
		pwm-led1 = &pwm_led1;
		level-shifter0 = &level_shifter0;
		level-shifter1 = &level_shifter1;
		level-shifter2 = &level_shifter2;
		relay1 = &relay_1;
		relay2 = &relay_2;
		relay3 = &relay_3;
		relay4 = &relay_4;
		dht11 = &dht110;
		dht22 = &dht220;
		ds18b20 = &ds18b200;
		servo = &servo0;
	};

	/*
	* By default, PWM module is only configured for led0 (LED1 on the board).
	* The light bulb app, however, uses LED2 to show the state of the lighting,
	* including its brightness level.
	*/
	pwmleds {
		compatible = "pwm-leds";
		pwm_led1: pwm_led_1 {
			pwms = <&pwm0 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
	};

	level_shifters {
		compatible = "gpio-leds";
		level_shifter0: level_shifter_0 {
			status = "okay";
			gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>;
			label = "Level Shifter Sensors - Output Enable";
		};
		level_shifter1: level_shifter_1 {
			status = "okay";
			gpios = <&gpio1 14 GPIO_ACTIVE_HIGH>;
			label = "Level Shifter Relays - Output Enable";
		};
		level_shifter2: level_shifter_2 {
			status = "okay";
			gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>;
			label = "Level Shifter Feeder - Output Enable";
		};
	};

	dht110: dht11_0 {
		compatible = "aosong,dht";
		status = "okay";
		dio-gpios = <&gpio0 26 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
	};

	dht220: dht22_0 {
		compatible = "aosong,dht";
		status = "okay";
		dio-gpios = <&gpio0 25 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
		dht22;
	};

	relays {
        compatible = "gpio-leds";
        relay_1: relay_01 {
            status = "okay";
            gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
            label = "Ralay 1";
        };
        relay_2: relay_02 {
            status = "okay";
            gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;
            label = "Ralay 2";
        };
        relay_3: relay_03 {
            status = "okay";
            gpios = <&gpio1 12 GPIO_ACTIVE_HIGH>;
            label = "Ralay 3";
        };
        relay_4: relay_04 {
            status = "okay";
            gpios = <&gpio1 13 GPIO_ACTIVE_HIGH>;
            label = "Ralay 4";
        };
	};

	servo0: servo_0 {
		compatible = "pwm-servo";
		pwms = <&pwm1 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		min-pulse = <PWM_USEC(1000)>;
		max-pulse = <PWM_USEC(2000)>;
	};
};

&pwm0 {
	pinctrl-0 = <&pwm0_default_alt>;
	pinctrl-1 = <&pwm0_sleep_alt>;
	pinctrl-names = "default", "sleep";
};

&pwm1 {
	status = "okay";
	pinctrl-0 = <&pwm1_default_alt>;
	pinctrl-1 = <&pwm1_sleep_alt>;
	pinctrl-names = "default", "sleep";
};

&uart3 {
    status = "okay";
    current-speed = <115200>;
    pinctrl-0 = <&uart3_default_alt>;
    pinctrl-1 = <&uart3_sleep_alt>;
    pinctrl-names = "default", "sleep";
    w1_0: w1-zephyr-serial-0 {
        compatible = "zephyr,w1-serial";
        status = "okay";
		ds18b200: ds18b20_0 {
			compatible = "maxim,ds18b20";
			family-code = <0x28>;
			resolution = <12>;
			status = "okay";
		};
    };
};

&pinctrl {
	pwm0_default_alt: pwm0_default_alt {
		group1 {
			psels = <NRF_PSEL(PWM_OUT1, 1, 7)>;
			nordic,invert;
		};
	};

	pwm0_sleep_alt: pwm0_sleep_alt {
		group1 {
			psels = <NRF_PSEL(PWM_OUT1, 1, 7)>;
			low-power-enable;
		};
	};

	pwm1_default_alt: pwm1_default_alt {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 2)>;
		};
	};

	pwm1_sleep_alt: pwm1_sleep_alt {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 2)>;
			low-power-enable;
		};
	};

	uart3_default_alt: uart3_default_alt {
        group1 {
            psels = <NRF_PSEL(UART_RX, 0, 6)>;
            bias-pull-up;
        };
        group2 {
            psels = <NRF_PSEL(UART_TX, 0, 7)>;
            nordic,drive-mode = <NRF_DRIVE_H0D1>;
        };
    };

	uart3_sleep_alt: uart3_sleep_alt {
        group1 {
            psels = <NRF_PSEL(UART_RX, 0, 6)>;
            low-power-enable;
        };
		group2 {
            psels = <NRF_PSEL(UART_TX, 0, 7)>;
            low-power-enable;
        };
    };
};
